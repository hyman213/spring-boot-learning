spring:
  datasource:
    druid:
      driver-class-name: com.mysql.jdbc.Driver
      url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=utf8&useSSL=false
      username: root
      password: root
      # 初始化大小，最小，最大
      initial-size: 1
      max-active: 20
      min-idle: 2
      # 获取连接等待超时的时间（毫秒）
      max-wait: 60000
      # 间隔多久才进行一次检测，检测需要关闭的空闲连接（毫秒）
      time-between-eviction-runs-millis: 120000
      # 一个连接在池中最大、最小生存的时间（毫秒）
      # max-evictable-idle-time-millis:
      min-evictable-idle-time-millis:  300000
      # 用来检测连接是否有效的sql, 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
      validation-query: SELECT 'x'
      # validation-query-timeout:
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filter: stat,wall,slf4j,config
      # 打开PSCache，并且指定每个连接上PSCache的大小, mysql下建议关闭
      #pool-prepared-statements: true
      #max-pool-prepared-statement-per-connection-size: 25
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录。如果需要加密需配置：config.decrypt=true;config.decrypt.key=${spring.datasource.publicKey}
      connectionProperties: druid.stat.mergeSql=true;druid.stat.logSlowSql=true;druid.stat.slowSqlMillis=5000;

      # Druid监控Servlet-web监控平台
      stat-view-servlet:
        url-pattern: /druid/*
        login-password: 2345
        login-username: druid
        # 访问控制:deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝; 如果allow没有配置或者为空，则允许所有访问
        allow: 127.0.0.1
        deny:
        enabled: true
        # 是否允许清空统计数据
        reset-enable: true


